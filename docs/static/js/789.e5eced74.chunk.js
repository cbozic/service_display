"use strict";(self.webpackChunkservicedisplay=self.webpackChunkservicedisplay||[]).push([[789],{5789:(e,a,n)=>{n.r(a),n.d(a,{MatroskaParser:()=>E});var t=n(6522),i=n(6663);const r=0,s=1,l=2,o=3,m=4,c=5,u={name:"dtd",container:{440786851:{name:"ebml",container:{17030:{name:"ebmlVersion",value:s},17143:{name:"ebmlReadVersion",value:s},17138:{name:"ebmlMaxIDWidth",value:s},17139:{name:"ebmlMaxSizeWidth",value:s},17026:{name:"docType",value:r},17031:{name:"docTypeVersion",value:s},17029:{name:"docTypeReadVersion",value:s}}},408125543:{name:"segment",container:{290298740:{name:"seekHead",container:{19899:{name:"seek",multiple:!0,container:{21419:{name:"id",value:m},21420:{name:"position",value:s}}}}},357149030:{name:"info",container:{29604:{name:"uid",value:l},29572:{name:"filename",value:r},3979555:{name:"prevUID",value:l},3965867:{name:"prevFilename",value:r},4110627:{name:"nextUID",value:l},4096955:{name:"nextFilename",value:r},2807729:{name:"timecodeScale",value:s},17545:{name:"duration",value:c},17505:{name:"dateUTC",value:s},31657:{name:"title",value:r},19840:{name:"muxingApp",value:r},22337:{name:"writingApp",value:r}}},524531317:{name:"cluster",multiple:!0,container:{231:{name:"timecode",value:l},22743:{name:"silentTracks ",multiple:!0},167:{name:"position",value:l},171:{name:"prevSize",value:l},160:{name:"blockGroup"},163:{name:"simpleBlock"}}},374648427:{name:"tracks",container:{174:{name:"entries",multiple:!0,container:{215:{name:"trackNumber",value:s},29637:{name:"uid",value:l},131:{name:"trackType",value:s},185:{name:"flagEnabled",value:o},136:{name:"flagDefault",value:o},21930:{name:"flagForced",value:o},156:{name:"flagLacing",value:o},28135:{name:"minCache",value:s},28136:{name:"maxCache",value:s},2352003:{name:"defaultDuration",value:s},2306383:{name:"timecodeScale",value:c},21358:{name:"name",value:r},2274716:{name:"language",value:r},134:{name:"codecID",value:r},25506:{name:"codecPrivate",value:m},2459272:{name:"codecName",value:r},3839639:{name:"codecSettings",value:r},3883072:{name:"codecInfoUrl",value:r},2536e3:{name:"codecDownloadUrl",value:r},170:{name:"codecDecodeAll",value:o},28587:{name:"trackOverlay",value:s},224:{name:"video",container:{154:{name:"flagInterlaced",value:o},21432:{name:"stereoMode",value:s},176:{name:"pixelWidth",value:s},186:{name:"pixelHeight",value:s},21680:{name:"displayWidth",value:s},21690:{name:"displayHeight",value:s},21683:{name:"aspectRatioType",value:s},3061028:{name:"colourSpace",value:s},3126563:{name:"gammaValue",value:c}}},225:{name:"audio",container:{181:{name:"samplingFrequency",value:c},30901:{name:"outputSamplingFrequency",value:c},159:{name:"channels",value:s},148:{name:"channels",value:s},32123:{name:"channelPositions",value:m},25188:{name:"bitDepth",value:s}}},28032:{name:"contentEncodings",container:{25152:{name:"contentEncoding",container:{20529:{name:"order",value:s},20530:{name:"scope",value:o},20531:{name:"type",value:s},20532:{name:"contentEncoding",container:{16980:{name:"contentCompAlgo",value:s},16981:{name:"contentCompSettings",value:m}}},20533:{name:"contentEncoding",container:{18401:{name:"contentEncAlgo",value:s},18402:{name:"contentEncKeyID",value:m},18403:{name:"contentSignature ",value:m},18404:{name:"ContentSigKeyID  ",value:m},18405:{name:"contentSigAlgo ",value:s},18406:{name:"contentSigHashAlgo ",value:s}}},25188:{name:"bitDepth",value:s}}}}}}}}},475249515:{name:"cues",container:{187:{name:"cuePoint",container:{179:{name:"cueTime",value:l},183:{name:"positions",container:{247:{name:"track",value:s},241:{name:"clusterPosition",value:s},21368:{name:"blockNumber",value:s},234:{name:"codecState",value:s},219:{name:"reference",container:{150:{name:"time",value:s},151:{name:"cluster",value:s},21343:{name:"number",value:s},235:{name:"codecState",value:s}}},240:{name:"relativePosition",value:s}}}}}}},423732329:{name:"attachments",container:{24999:{name:"attachedFiles",multiple:!0,container:{18046:{name:"description",value:r},18030:{name:"name",value:r},18016:{name:"mimeType",value:r},18012:{name:"data",value:m},18094:{name:"uid",value:l}}}}},272869232:{name:"chapters",container:{17849:{name:"editionEntry",container:{182:{name:"chapterAtom",container:{29636:{name:"uid",value:l},145:{name:"timeStart",value:s},146:{name:"timeEnd",value:l},152:{name:"hidden",value:o},17816:{name:"enabled",value:l},143:{name:"track",container:{137:{name:"trackNumber",value:l},128:{name:"display",container:{133:{name:"string",value:r},17276:{name:"language ",value:r},17278:{name:"country ",value:r}}}}}}}}}}},307544935:{name:"tags",container:{29555:{name:"tag",multiple:!0,container:{25536:{name:"target",container:{25541:{name:"tagTrackUID",value:l},25540:{name:"tagChapterUID",value:s},25542:{name:"tagAttachmentUID",value:l},25546:{name:"targetType",value:r},26826:{name:"targetTypeValue",value:s},25545:{name:"tagEditionUID",value:l}}},26568:{name:"simpleTags",multiple:!0,container:{17827:{name:"name",value:r},17543:{name:"string",value:r},17541:{name:"binary",value:m},17530:{name:"language",value:r},17531:{name:"languageIETF",value:r},17540:{name:"default",value:o}}}}}}}}}}};var d=n(1836),p=n(950),v=n(5171),g=n(1447);const h=t("music-metadata:parser:ebml");class f extends((0,g.fO)("EBML")){}const k=0,y=2,b=3,w=4,T=5;class I{constructor(e){this.padding=0,this.parserMap=new Map,this.ebmlMaxIDLength=4,this.ebmlMaxSizeLength=8,this.tokenizer=e,this.parserMap.set(s,(e=>this.readUint(e))),this.parserMap.set(r,(e=>this.readString(e))),this.parserMap.set(m,(e=>this.readBuffer(e))),this.parserMap.set(l,(async e=>this.readBuffer(e))),this.parserMap.set(o,(e=>this.readFlag(e))),this.parserMap.set(c,(e=>this.readFloat(e)))}async iterate(e,a,n){return this.parseContainer(S(e),a,n)}async parseContainer(e,a,n){const t={};for(;this.tokenizer.position<a;){let r;const s=this.tokenizer.position;try{r=await this.readElement()}catch(i){if(i instanceof v.d1)break;throw i}const l=e.container[r.id];if(l){switch(n.startNext(l)){case k:if(r.id,h(`Read element: name=${x(l)}{id=0x${r.id.toString(16)}, container=${!!l.container}} at position=${s}`),l.container){const e=await this.parseContainer(l,r.len>=0?this.tokenizer.position+r.len:-1,n);l.multiple?(t[l.name]||(t[l.name]=[]),t[l.name].push(e)):t[l.name]=e,await n.elementValue(l,e,s)}else{const e=this.parserMap.get(l.value);if("function"===typeof e){const a=await e(r);t[l.name]=a,await n.elementValue(l,a,s)}}break;case T:h(`Go to next element: name=${x(l)}, element.id=0x${r.id}, container=${!!l.container} at position=${s}`);break;case y:h(`Ignore element: name=${x(l)}, element.id=0x${r.id}, container=${!!l.container} at position=${s}`),await this.tokenizer.ignore(r.len);break;case b:h(`Ignore remaining container, at: name=${x(l)}, element.id=0x${r.id}, container=${!!l.container} at position=${s}`),await this.tokenizer.ignore(a-this.tokenizer.position);break;case w:return h(`Terminate parsing at element: name=${x(l)}, element.id=0x${r.id}, container=${!!l.container} at position=${s}`),t}}else if(236===r.id)this.padding+=r.len,await this.tokenizer.ignore(r.len);else h(`parseEbml: parent=${x(e)}, unknown child: id=${r.id.toString(16)} at position=${s}`),this.padding+=r.len,await this.tokenizer.ignore(r.len)}return t}async readVintData(e){const a=await this.tokenizer.peekNumber(p.UINT8);let n=128,t=1;for(;0===(a&n);){if(t>e)throw new f("VINT value exceeding maximum size");++t,n>>=1}const i=new Uint8Array(t);return await this.tokenizer.readBuffer(i),i}async readElement(){const e=await this.readVintData(this.ebmlMaxIDLength),a=await this.readVintData(this.ebmlMaxSizeLength);return a[0]^=128>>a.length-1,{id:$(e,e.length),len:$(a,a.length)}}async readFloat(e){switch(e.len){case 0:return 0;case 4:return this.tokenizer.readNumber(p.Float32_BE);case 8:case 10:return this.tokenizer.readNumber(p.Float64_BE);default:throw new f(`Invalid IEEE-754 float length: ${e.len}`)}}async readFlag(e){return 1===await this.readUint(e)}async readUint(e){return $(await this.readBuffer(e),e.len)}async readString(e){return(await this.tokenizer.readToken(new p.StringType(e.len,"utf-8"))).replace(/\x00.*$/g,"")}async readBuffer(e){const a=new Uint8Array(e.len);return await this.tokenizer.readBuffer(a),a}}function $(e,a){return Number(function(e,a){const n=new Uint8Array(8),t=e.subarray(0,a);try{return n.set(t,8-a),p.UINT64_BE.get(n,0)}catch(i){return BigInt(-1)}}(e,a))}function S(e){return e.container&&Object.keys(e.container).map((a=>{const n=e.container[a];return n.id=Number.parseInt(a),n})).forEach((a=>{a.parent=e,S(a)})),e}function x(e){let a="";return e.parent&&"dtd"!==e.parent.name&&(a+=`${x(e.parent)}/`),a+e.name}const D=t("music-metadata:parser:matroska");class E extends i.s{constructor(){super(...arguments),this.seekHeadOffset=0,this.flagUseIndexToSkipClusters=this.options.mkvUseIndex??!1}async parse(){const e=this.tokenizer.fileInfo.size??Number.MAX_SAFE_INTEGER,a=new I(this.tokenizer);D("Initializing DTD end MatroskaIterator"),await a.iterate(u,e,{startNext:e=>{switch(e.id){case 475249515:return D(`Skip element: name=${e.name}, id=0x${e.id.toString(16)}`),y;case 524531317:if(this.flagUseIndexToSkipClusters&&this.seekHead){const e=this.seekHead.seek.find((e=>e.position+this.seekHeadOffset>this.tokenizer.position));if(e){const a=e.position+this.seekHeadOffset-this.tokenizer.position;return D(`Use index to go to next position, ignoring ${a} bytes`),this.tokenizer.ignore(a),T}}return y;default:return k}},elementValue:async(e,a,n)=>{switch(D(`Received: name=${e.name}, value=${a}`),e.id){case 17026:this.metadata.setFormat("container",`EBML/${a}`);break;case 290298740:this.seekHead=a,this.seekHeadOffset=n;break;case 357149030:{const e=a,n=e.timecodeScale?e.timecodeScale:1e6;if("number"===typeof e.duration){const a=e.duration*n/1e9;await this.addTag("segment:title",e.title),this.metadata.setFormat("duration",Number(a))}}break;case 374648427:{const e=a;if(e?.entries){e.entries.forEach((e=>{const a={codecName:e.codecID.replace("A_","").replace("V_",""),codecSettings:e.codecSettings,flagDefault:e.flagDefault,flagLacing:e.flagLacing,flagEnabled:e.flagEnabled,language:e.language,name:e.name,type:e.trackType,audio:e.audio,video:e.video};this.metadata.addStreamInfo(a)}));const a=e.entries.filter((e=>e.trackType===d.S.audio)).reduce(((e,a)=>e?a.flagDefault&&!e.flagDefault||a.trackNumber<e.trackNumber?a:e:a),null);a&&(this.metadata.setFormat("codec",a.codecID.replace("A_","")),this.metadata.setFormat("sampleRate",a.audio.samplingFrequency),this.metadata.setFormat("numberOfChannels",a.audio.channels))}}break;case 307544935:{const e=a;await Promise.all(e.tag.map((async e=>{const a=e.target,n=a?.targetTypeValue?d.yK[a.targetTypeValue]:a?.targetType?a.targetType:"track";await Promise.all(e.simpleTags.map((async e=>{const a=e.string?e.string:e.binary;await this.addTag(`${n}:${e.name}`,a)})))})))}break;case 423732329:{const e=a;await Promise.all(e.attachedFiles.filter((e=>e.mimeType.startsWith("image/"))).map((e=>this.addTag("picture",{data:e.data,format:e.mimeType,description:e.description,name:e.name}))))}}}})}async addTag(e,a){await this.metadata.addTag("matroska",e,a)}}}}]);
//# sourceMappingURL=789.e5eced74.chunk.js.map